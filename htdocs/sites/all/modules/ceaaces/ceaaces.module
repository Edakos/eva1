<?php

/**
 * hook_autoload_info implementation.
 * The hook was provided by the 'autoload' module.
 * http://engineeredweb.com/blog/10/5/3-tips-using-external-libraries-drupal
  */
function ceaaces_autoload_info() {

  return array(
    'PHPExcel' => array(
      'file' => 'PHPExcel.php',
      'file path' => libraries_get_path('PHPExcel'),
    ),
    'idiorm' => array(
      'file' => 'idiorm.php',
      'file path' => libraries_get_path('j4mie-orm'),
    ),
    'paris' => array(
      'file' => 'paris.php',
      'file path' => libraries_get_path('j4mie-orm'),
    ),
    'RedBean' => array(
      'file' => 'rb.php',
      'file path' => libraries_get_path('RedBean'),
    ),
    'tcpdf' => array(
      'file' => 'tcpdf.php',
      'file path' => libraries_get_path('tcpdf'),
    ),
    'fpdf' => array(
      'file' => 'fpdf.php',
      'file path' => libraries_get_path('fpdf'),
    ),
    'fpdf_tpl' => array(
      'file' => 'fpdf_tpl.php',
      'file path' => libraries_get_path('fpdf'),
    ),
    'fpdi' => array(
      'file' => 'fpdi.php',
      'file path' => libraries_get_path('fpdi'),
    ),
  );
}


function ceaaces_help() {
  $output = '';  //declare your output variable
  switch ($path) {
  case "admin/help#ceaaces":
    $output = '<p>'.  t("Apoyo al proceso de evaluación de las IES.") .'</p>';
    break;
  }
  return $output;
}



/**
 * Implementation of hook_perm()
 */
function ceaaces_perm() {
  return array(
    'upload ceaaces evaluations', 
    'administer ceaaces', 
    'access ceaaces reports',
    'access all ceaaces institutes',
    'access all ceaaces universities',
    'acceso a form inscripcion a pruebas en ceaaces',
    'acceso a admin form inscripcion a pruebas en ceaaces',
    'download own ceaaces evaluations', 
    'download all ceaaces evaluations',
    'download ceaaces evaluation receipt'
  );
}

function ceaaces_admin() {
  $form = array();
  //ceaaces_num_max_rows_in_html_table

  $form['ceaaces_num_max_rows_in_html_table'] = array(
    '#type' => 'textfield', 
    '#title' => t('Número máximo de filas en tablas'), 
    '#description' => 'El número máximo de las filas que tendrán las tablas del sistema con paginación.',
    '#size' => 10,
    '#default_value' => variable_get('ceaaces_num_max_rows_in_html_table', '20')
  );


  $form['ceaaces_porcentaje_min_cred_examen'] = array(
    '#type' => 'textfield', 
    '#title' => t('Porcentaje mínimo de créditos aprobados para examen'), 
    '#description' => 'Ingrese un número entre 0 y 100 para definir el porcentaje mínimo que debe tener un estudiante de pregrado para rendir el examen.',
    '#size' => 10,
    '#default_value' => variable_get('ceaaces_porcentaje_min_cred_examen', '80')
  );

  $form['ceaaces_mensaje_entra_examen'] = array(
    '#type' => 'textarea', 
    '#title' => t('Mensaje a estudiantes que van a examen'), 
    '#description' => t('Mensaje que se le mostrará al estudiante de pregrado con un porcentaje de créditos aprobados mayor o igual al porcentaje mínimo. Las etiquetas disponibles son: !num_cred, !num_cred_tot, !porcentaje_cred, !porcentaje_min_cred_examen.'), 
    '#default_value' => variable_get('ceaaces_mensaje_entra_examen', '')
  );

  $form['ceaaces_mensaje_no_entra_examen'] = array(
    '#type' => 'textarea', 
    '#title' => t('Mensaje a estudiantes que NO van a examen'), 
    '#description' => t('Mensaje que se le mostrará al estudiante de pregrado con un porcentaje de créditos aprobados menor al porcentaje mínimo. Las etiquetas disponibles son: !num_cred, !num_cred_tot, !porcentaje_cred, !porcentaje_min_cred_examen.'), 
    '#default_value' => variable_get('ceaaces_mensaje_no_entra_examen', '')
  );

  $form['ceaaces_mensaje_sin_num_cred'] = array(
    '#type' => 'textarea', 
    '#title' => t('Mensaje a estudiantes sin número de créditos aprobados'), 
    '#description' => t('Mensaje que se le mostrará al estudiante de pregrado que no tengan registrado el dato de número de créditos aprobados. Las etiquetas disponibles son: !num_cred_tot, !porcentaje_min_cred_examen.'), 
    '#default_value' => variable_get('ceaaces_mensaje_sin_num_cred', '')
  );

  $form['ceaaces_mensaje_sin_num_cred_tot'] = array(
    '#type' => 'textarea', 
    '#title' => t('Mensaje a estudiantes sin número de créditos totales'), 
    '#description' => t('Mensaje que se le mostrará al estudiante de pregrado que no tengan registrado el dato de número de créditos totales de su carrera. Las etiquetas disponibles son: !num_cred, !porcentaje_min_cred_examen.'), 
    '#default_value' => variable_get('ceaaces_mensaje_sin_num_cred_tot', '')
  );

  return system_settings_form($form);
}

/**
 * Implementation of hook_menu()
 */
function ceaaces_menu() {
  $items = array();
  
  // Put your menu items here.
  $items['admin/settings/ceaaces'] = array(
    'title' => 'Configuración CEAACES', 
    'access arguments' => array('administer ceaaces'), 
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ceaaces_admin'),
  );
  
  $items['evaluacion'] = array(
    'title' => 'Envío de la evaluación', 
    'access arguments' => array('upload ceaaces evaluations'), 
    //'title' => 'Creación de contraseña', 
    //'page callback' => 'drupal_get_form', 
    'page callback' => 'ceaaces_evaluacion', 
    //'page arguments' => array('ceaaces_upload_eva_spreadsheet'),
    'type' => MENU_CALLBACK,
  );
  
  $items['evaluacion_todas'] = array(
    'title' => 'Lista de evaluaciones', 
    //'access arguments' => array('download all ceaaces evaluations', 'download all ceaaces evaluations universities'), 
    'access arguments' => array('download all ceaaces evaluations'), 
    'page callback' => 'ceaaces_evaluacion_todas', 
    'type' => MENU_CALLBACK,
  );
  
  $items['evaluacion_todas/detalles/%/%'] = array(
    'title' => 'Detalle de la IES', 
    //'access arguments' => array('download all ceaaces evaluations', 'download all ceaaces evaluations universities'), 
    'access arguments' => array('download all ceaaces evaluations'), 
    'page callback' => 'ceaaces_evaluacion_todas_detalles', 
    'page arguments' => array(1, 2, 3, 4),
    'type' => MENU_CALLBACK,
  );
  
  $items['evaluacion_descargar'] = array(
    //'title' => 'Envío de la evaluación', 
    //'access arguments' => array('download own ceaaces evaluations', 'download own ceaaces evaluations universities'), 
    'access arguments' => array('download own ceaaces evaluations'), 
    //'title' => 'Creación de contraseña', 
    'page callback' => 'ceaaces_evaluacion_descargar', 
    //'page callback' => 'file_download', 
    //'page arguments' => array('forms_institutos'),
    'type' => MENU_CALLBACK,
  );
  
  $items['evaluacion_comprobante'] = array(
    //'title' => 'Envío de la evaluación', 
    'access arguments' => array('download ceaaces evaluation receipt'), 
    //'title' => 'Creación de contraseña', 
    'page callback' => 'ceaaces_evaluacion_comprobante', 
    //'page callback' => 'file_download', 
    //'page arguments' => array('forms_institutos'),
    'type' => MENU_CALLBACK,
  );
  
  $items['cambiar_clave'] = array(
    'title' => 'Cambio de clave',
    'access arguments' => array('upload ceaaces evaluations'), 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('ceaaces_cambiar_clave'), 
    'type' => MENU_CALLBACK,
  );

  $items['inscripcion'] = array(
    'title' => 'Inscripción para pruebas de conocimiento',
    'access arguments' => array('acceso a form inscripcion a pruebas en ceaaces'), 
    //'page callback' => 'drupal_get_form', 
    'page callback' => 'ceaaces_inscripcion_readonly', 
    //'page arguments' => array('ceaaces_inscripcion'), 
    'type' => MENU_CALLBACK,
  );

  $items['inscripcion_editar'] = array(
    'title' => 'Inscripción para pruebas de conocimiento',
    'access arguments' => array('acceso a admin form inscripcion a pruebas en ceaaces'), 
    'page callback' => 'drupal_get_form', 
    //'page callback' => 'ceaaces_inscripcion_readonly', 
    'page arguments' => array('ceaaces_inscripcion'), 
    'type' => MENU_CALLBACK,
  );

  return $items;
}


function ceaaces_evaluacion_todas_detalles($arg1, $id, $page_return = NULL) {
  if (empty($id) || !is_numeric($id)) {
    form_set_error('', 'Error accediendo a los detalles. Probable mal uso del sistema. ID:' . serialize($id));
    drupal_goto('/');
  }
  $output = '';
  $result = db_query("
    SELECT
    i.id,
    i.codigo,
    i.name AS i_name,
    i.cedula_contacto,
    i.nombre_contacto,
    i.email_contacto,
    a.orig_name,
    a.md5,
    to_char(a.created, 'DD/MM/YYYY HH:MI:SS') AS created,
    a.extension,
    a.id AS a_id,
    (SELECT COUNT(*) FROM ev_log AS l WHERE l.uid = i.uid) AS cambio_clave
    FROM ev_ies AS i
    LEFT OUTER JOIN ev_archivo AS a
    ON a.ies_name=i.codigo
    WHERE NOT i.uid IS NULL
    AND i.id=$id
    ORDER BY i.name ASC, a.created DESC
    "); //AND i.ev_tipo_ies_id=2
  
  $last_ies = null;
  $buff = '';
  $zebra = false;
  $data = array();
  $count = 0;

  while ($ies = db_fetch_object($result)) {
    $data[] = $ies;
  }


  $output .= '<a href="/evaluacion_todas' . (!empty($page_return) ? '?' . base64_decode($page_return) : '') . '">&laquo;Regresar al listado de IES</a>';
  $output .= '<div>&nbsp;</div>';

  $output .= '<table>';
  $output .= '<tr>';
  $output .= '<td width="200px"><strong>';
  $output .= 'Código:';
  $output .= '</strong></td>';
  $output .= '<td>';
  $output .= $data[0]->codigo;
  $output .= '</td>';
  $output .= '</tr>';
  $output .= '<tr>';
  $output .= '<td width="200px"><strong>';
  $output .= 'Nombre:';
  $output .= '</strong></td>';
  $output .= '<td>';
  $output .= $data[0]->i_name;
  $output .= '</td>';
  $output .= '</tr>';
  $output .= '<tr>';
  $output .= '<td width="200px"><strong>';
  $output .= 'Contacto:';
  $output .= '</strong></td>';
  $output .= '<td>';
  $output .= $data[0]->nombre_contacto;
  $output .= '</td>';
  $output .= '</tr>';
  $output .= '<tr>';
  $output .= '<td width="200px"><strong>';
  $output .= 'Cédula:';
  $output .= '</strong></td>';
  $output .= '<td>';
  $output .= $data[0]->cedula_contacto;
  $output .= '</td>';
  $output .= '</tr>';
  $output .= '<tr>';
  $output .= '<td width="200px"><strong>';
  $output .= 'Correo electrónico:';
  $output .= '</strong></td>';
  $output .= '<td>';
  $output .= '<a href="mailto:' . $data[0]->email_contacto . '">' . $data[0]->email_contacto . '</a>';
  $output .= '</td>';
  $output .= '</tr>';
  $output .= '</table>';


  $output .= '<div>&nbsp;</div>';
  $output .= '<div>&nbsp;</div>';
  $output .= '<div>&nbsp;</div>';

  $output .= '<h3>Archivos enviados</h3>';
  if (empty($data[0]->a_id)) {
    $output .= '<i>El Instituto no tiene archivos enviados.</i>';
  } else {
    $output .= '<table>';

    $output .= '<tr>';
    $output .= '<th>&nbsp;</th>';
    $output .= '<th>Archivo</th>';
    $output .= '<th>Huella Digital</th>';
    $output .= '<th>Enviado</th>';
    $output .= '</tr>';

    foreach ($data as $ies) {
      $created = explode('.', $ies->created);
      $created = $created[0];

      $output .= '<tr>';
      $output .= '<td>';
      $output .= '<strong>' . ++$count . '.</strong>';
      $output .= '</td>';
      $output .= '<td>';
      $output .= (empty($ies->a_id)) ? '' : '<a href="evaluacion_descargar?file=' . $ies->a_id . '"><img src="/sites/default/files/' . $ies->extension  . '.png" width="20px" height="20px">&nbsp;' . ceaaces_evaluacion_comprobante_codigo($ies->a_id) . '.' . $ies->extension . '</a>';
      $output .= '</td>';
      $output .= '<td>';
      $output .= $ies->md5;
      $output .= '</td>';
      $output .= '<td>';
      $output .= $created;
      $output .= '</td>';
      $output .= '</tr>';
    }
    $output .= '</table>';
  }
  $output .= '<div>&nbsp;</div>';
  $output .= '<div>&nbsp;</div>';
  $output .= '<div>&nbsp;</div>';

  $output .= '<h3>Observaciones </h3>';
  $result = db_query("
    SELECT 
    id, 
    description,
    to_char(created, 'DD/MM/YYYY HH:MI:SS') AS created,
    usuario
    FROM
    ev_ies_comentario
    WHERE
    ev_ies_tipo_comentario_id=1
    AND ev_ies_id=$id
    ");
  $obs = array();
  while ($ob = db_fetch_object($result)) {
    $obs[] = $ob;
  }

  if (count($obs) > 0) {
    $output .= '<ol>';
    foreach ($obs as $ob) {
      $output .= '<li>';
      $output .= $ob->description;

      $output .= '<br>';
      $output .= '<i>Por ' . $ob->usuario . ', con fecha ' . $ob->created . '</i>';
      $output .= '</li>';
    } 
    $output .= '</ol>';
  } else {
    $output .= '<i>No hay observaciones.</i>';
  }
  $output .= drupal_get_form('ceaaces_evaluacion_todas_observaciones', $id);

  return $output;
}

function ceaaces_evaluacion_todas_observaciones(&$form_state, $ev_ies_id) {
  $form = array();

  $form['observacion'] = array(
    '#type' => 'textarea',
    '#title' => t('Ingrese una observación'),
    '#size' => 60,
  );
  $form['ev_ies_id'] = array(
    '#type' => 'hidden',
    '#value' => $ev_ies_id,
  );
  $form['submit'] = array('#type' => 'submit', '#value' => 'Enviar');

  return $form;
}

function ceaaces_evaluacion_todas_observaciones_submit($form, &$form_state) {
  global $user;

  db_query("INSERT INTO ev_ies_comentario(
    description, 
    ev_ies_id, 
    ev_ies_tipo_comentario_id, 
    uid, 
    usuario
  ) VALUES (
    '" . $form_state['values']['observacion'] . "', 
    " . $form_state['values']['ev_ies_id'] . ",
    1, 
    " . $user->uid . ", 
    '" . $user->name . "' 
  )");
  drupal_set_message('Observación registrada.');
}

function ceaaces_evaluacion_todas() {
  $output = '';

  $header = array(
    '', //columna para el número de fila
    array(
      'data' => 'Código',
      'field'=> 'codigo'
    ),
    array(
      'data' => 'Instituto',
      'field'=> 'i_name',
      'sort'=> 'asc'
    ),
    array(
      'data' => 'Contacto',
      'field'=> 'nombre_contacto'
    ),
    array(
      'data' => 'último archivo enviado',
      'field'=> 'a_name'
    ),
    '' //columna de la lupa para acceder a los detalles
  );

  $query = "
    SELECT
    i.id,
    i.codigo,
    i.name AS i_name,
    i.nombre_contacto,
    i.email_contacto,
    (SELECT COUNT(*) FROM ev_log AS l WHERE l.uid = i.uid) AS cambio_clave,
    (
      SELECT a.name
      FROM ev_archivo AS a
      WHERE a.ies_name = i.codigo
      ORDER BY a.created DESC
      LIMIT 1
      ) as a_name,
      (
      SELECT a.id
      FROM ev_archivo AS a
      WHERE a.ies_name = i.codigo
      ORDER BY a.created DESC
      LIMIT 1
        ) as a_id
    FROM ev_ies AS i
    WHERE NOT i.uid IS NULL
    " . (user_access('access all ceaaces universities') ? " AND i.ev_tipo_ies_id = 1" : '') . "
    " . (user_access('access all ceaaces institutes') ? " AND i.ev_tipo_ies_id = 2" : '') . "
    ";

  $limit = variable_get('ceaaces_num_max_rows_in_html_table', 20);
  $res = pager_query($query . tablesort_sql($header), $limit);
  $data = array();
  $count = 0;
  while ($row = db_fetch_array($res)) {
    $extension = explode('.', $row['a_name']);
    $extension = $extension[count($extension) - 1];

    $count++;
    $num = (isset($_GET['page']) ? $limit * $_GET['page'] : 0) + $count;

    $page_return = array();
    foreach ($_GET as $k => $v) {
      $page_return[] = $k . '=' . $v;
    }
    $page_return = '/' . base64_encode(implode('&', $page_return));

    $data[] = array(
      '<strong>' . $num . '.</strong>',
      $row['codigo'], 
      $row['i_name'], 
//      $row['nombre_contacto'], 
      (empty($row['nombre_contacto']) ? '<i>(Contacto no registrado)</i>' : '<a href="mailto:' . $row['email_contacto'] . '">' . $row['nombre_contacto']) . '</a>' . (($row['cambio_clave'] == 1) ? '' : '<br><i><span style="color:#900;">(Usuario no activado con cambio de clave)</span></i>'),
      //$row['a_name'],
      (empty($row['a_id'])) ? '<i>El Instituto no tiene archivos enviados.</i>' : '<a href="evaluacion_descargar?file=' . $row['a_id'] . '"><img src="/sites/default/files/' . $extension  . '.png" width="20px" height="20px">&nbsp;' . ceaaces_evaluacion_comprobante_codigo($row['a_id']) . '.' . $extension . '</a>',

      '<a href="/evaluacion_todas/detalles/' . $row['id'] . $page_return . '"><img src="/sites/default/files/lupa.png" width="20px" height="20px" title="Mostrar detalles"></a>'
    );
  }
  $output .= theme('table', $header, $data);

  $query_num_pages = explode(' FROM ev_ies ', $query);
  $num_pages = db_result(db_query("SELECT count(*) FROM ev_ies " . $query_num_pages[1]));
  $num_pages = ceil($num_pages / $limit);

  $output .= theme('pager', NULL, $limit, 0, array(), $num_pages);
  return $output;
}

function ceaaces_evaluacion_todas_tr($tr, $style_tr = '', $style_td = '') {
  $output = '';

  $style = (empty($style_tr) ? '' : ' style="' . $style_tr . '"');
  $output .= '<tr' . $style . '>';

  $style = (empty($style_td) ? '' : ' style="' . $style_td . '"');
  foreach ($tr as $td) {
    $output .= '<td' . $style . '>';
    $output .= $td;
    $output .= '</td>';
  }
  $output .= '</tr>';

  return $output;
}

function ceaaces_evaluacion_todas_li($li, $style = '') {
  $output = '';

  $output .= '<li>';

  $style = (empty($style) ? '' : ' style="' . $style . '"');
  foreach ($li as $l) {
    $output .= '<span' . $style . '>';
    $output .= $l;
    $output .= '</span>';
    $output .= '<br>';
  }
  $output .= '</li>';

  return $output;
}

function ceaaces_evaluacion_descargar() {
  global $user;

  if (!isset($_GET['file']) || !is_numeric($_GET['file'])) {
    form_set_error('hoja_calculo', 'Se ha detectado un uso indebido del sistema. Este incidente será reportado.');
    drupal_goto('/');
    return;
  }

  $file_id = $_GET['file'];
  $file = db_fetch_object(db_query("SELECT * FROM ev_archivo WHERE id=" . $file_id));
  
  $filename = $file->name;
  //Obtiene el ID del usuario que subió el archivo:
  $file_uid = explode('-', $filename);
  $file_uid = $file_uid[0];
  
  //if ($user->uid == $file->uid) {

  if (user_access('download all ceaaces evaluations') || $user->uid == $file_uid) { 
    //Descarga si se tiene el permiso de descargar cualquiera, o si el usuario actual es el mismo que subió el archivo:
    if (isset($_GET['comprobante'])) {
      $filename = $file->name . ".pdf";
      $filepath = variable_get('file_directory_path', 'files') . '/forms_institutos/comprobantes/' . $filename;
      //Si es comprobante, verifica que exista, y si no lo genera:
      if (!file_exists($filepath)) {
        ceaaces_evaluacion_comprobante($filepath, $file);
      }
    } else {
      $filepath = variable_get('file_directory_path', 'files') . '/forms_institutos/' . $filename;
    }
    unset($_GET['file']);
    file_download($filepath);
  } else {
    form_set_error('hoja_calculo', 'El archivo que intenta acceder no le pertenece. Este incidente será reportado.');
    drupal_goto('/');
    return;
  }
}

function ceaaces_evaluacion_comprobante($filepath, $file) {
  $path = explode('/', $filepath);
  $filename = array_pop($path);
  $path = implode('/', $path);

  $datetime = explode(' ', $file->created);

  $pdf = new FPDI(); 
  $pdf->AddPage(); 
  $pdf->setSourceFile($path . '/plantilla-comprobante-recepcion-archivo.pdf'); 
  $tplIdx = $pdf->importPage(1); 
  $pdf->useTemplate($tplIdx, 0, 0, 0); 
  $pdf->SetFont('Arial'); 
  $pdf->SetTextColor(0,0,0); 
  $pdf->SetXY(85, 79); 
  $pdf->Write(0, ceaaces_evaluacion_comprobante_codigo($file->id)); 
  $pdf->SetXY(82, 117); 
  $pdf->Write(0, $file->ies_name); 
  $pdf->SetXY(82, 127); 
  $pdf->Write(0, $datetime[0]); 
  $pdf->SetXY(82, 137); 
  $pdf->Write(0, $datetime[1]); 
  $pdf->SetXY(82, 147); 
  $pdf->Write(0, $file->orig_name); 
  $pdf->SetXY(82, 157); 
  $pdf->Write(0, $file->md5); 
  //$pdf->Output($filepath, 'D'); 
  //$pdf->Output($filename, 'D'); 
  $pdf->Output($filepath, 'F'); 

}

function ceaaces_file_basename($filename) {
  //Originally by Aleksander Machniak
  //http://pear.php.net/bugs/bug.php?id=14529&edit=12&patch=mime.patch&revision=1222363721
  //basename() is not unicode safe and locale dependent
  if (stristr(PHP_OS, 'win') || stristr(PHP_OS, 'netware')) {
    return preg_replace('/^.*[\\\\\\/]/', '', $filename);
  }
  else {
    return preg_replace('/^.*[\/]/', '', $filename);
  }
}

function ceaaces_evaluacion_comprobante_codigo($num, $prefijo = '', $subfijo = '') {
  global $user;
  $codigo = '';
  $prefijo = empty($prefijo) ? 'GIIES-CEAACES-2012-' : $prefijo;
  $subfijo = empty($subfijo) ? '' : $subfijo;

  foreach ($user->roles as $rid => $role_name) {
    if ($rid == 9) { //Coordinador de todos los Institutos
      $codigo_ies = db_result(db_query('SELECT ies_name FROM ev_archivo WHERE id=' . $num));
      $prefijo = $codigo_ies . '-';
      $subfijo = '';
    }
  }
  return $prefijo . $num . $subfijo;
}


/**
 * Implementation of hook_user()
 */
function ceaaces_user($op, &$edit, &$account, $category = NULL) {
  //watchdog('XXX', 'en ' . $op . '!! account:' . serialize($account));
  switch ($op) {
    case "after_update":
      // Your code here.
      break;
    case "categories":
      break;
    case "delete":
      break;
    case "form":
      break;
    case "insert":
      break;
    case "load":
      break;
    case "login":
      break;
    case "logout":
      break;
    case "register":
      break;
    case "submit":
      break;
    case "update":

      if (user_access('ev_ies update')) { //Solo si quien actualiza la informacion del usuario tiene el permiso "ev_ies update", quien por lo general solo es el administrador
        watchdog('hook_user:update', 'edit[roles] : ' . serialize($edit['roles']) . ' | account->roles: ' . serialize($account->roles));
        if ((!isset($edit['roles'][8]) && isset ($account->roles[8])) || (!isset($edit['roles'][11]) && isset ($account->roles[11]))) { //quitando rol de representante de instituto(8) o de universidad (11)
          watchdog('---', 'DROP: updating to null ev_ies where codigo = ' . $account->name);
          $ies = db_result(db_query("SELECT id FROM ev_ies WHERE codigo='" . $account->name . "'"));
          if (!empty($ies)) {
            db_query("UPDATE ev_ies SET uid=NULL WHERE codigo='" . $account->name . "'");
            drupal_set_message('Se ha desvinculado al usuario "' . $account->name . '" de una IES cuyo código es el mismo.');
          } else {
            form_set_error('', 'No se pudo desvincular al usuario "' . $account->name . '" de su IES. No se encontró la IES con código "' . $account->name . '".');
          }
        } else if ((isset($edit['roles'][8]) && !isset ($account->roles[8])) || (isset($edit['roles'][11]) && !isset ($account->roles[11]))) {//agregando  rol de representante de instituto(8) o de universidad (11)
          watchdog('---', 'ADD: updating to ' . $account->uid . ' ev_ies = ' . $account->name);
          $ies = db_result(db_query("SELECT id FROM ev_ies WHERE codigo='" . $account->name . "'"));
          if (!empty($ies)) {
            db_query("UPDATE ev_ies SET uid=" . $account->uid . " WHERE codigo='" . $account->name . "'");
            drupal_set_message('Se ha vinculado al usuario "' . $account->name . '" con una IES cuyo código es el mismo.');
          } else {
            form_set_error('', 'No se pudo vincular al usuario "' . $account->name . '" con una IES. No se encontró la IES con código "' . $account->name . '".');
          }
        }
      }
      break;
    case "validate":
      break;
    case "view":
      break;
  }
}



function ceaaces_file_download($filepath) {
  //return "XXX";

  $filename = ceaaces_file_basename($filepath);
  $f = explode('.', $filename);
  $extension = array_pop($f);
  if (user_access('download all ceaaces evaluations') || $extension == 'pdf') {
    $ev_archivo_name = ($extension == 'pdf') ? implode('.', $f) : $filename;
    $file = db_fetch_object(db_query("SELECT * FROM ev_archivo WHERE name='" . $ev_archivo_name . "'"));
    $orig_filename = ceaaces_evaluacion_comprobante_codigo($file->id) . '.' . $extension;
  } else {
    $file = db_fetch_object(db_query("SELECT * FROM ev_archivo WHERE name='" . $filename . "'"));
    $orig_filename = $file->orig_name;
  }

  $header = array();
  $new_window = true;
  if ($new_window) {
    $header[] = 'Pragma: public'; // required
    $header[] = 'Expires: 0';
    $header[] = 'Cache-Control: must-revalidate, post-check=0, pre-check=0';
    $header[] = 'Content-Transfer-Encoding: binary';
    $header[] = 'Content-Disposition: inline; filename="'. $orig_filename .'";' ;
  }
  else {
    $header[] = 'Pragma: no-cache';
    $header[] = 'Cache-Control: no-cache, must-revalidate';
    $header[] = 'Content-Disposition: attachment; filename="'. $orig_filename .'";' ;
  }

  $header[] = 'Content-Type: '. file_get_mimetype($orig_filename);
  $header[] = 'Content-Length: '. (string)(@filesize($filepath));
  $header[] = 'Connection: close';
  return $header;

}

function ceaaces_block($op = 'list', $delta = 0) {
  global $user;
  $block = array();

  if ($op == "list") {
    $block[0]["info"] = t('Datos de IES');
  } else if ($op == 'view') {
    $block_content = '';
    $ies = db_fetch_object(db_query('SELECT * FROM ev_ies where uid=' . $user->uid));

    if (!empty($ies)) {
      $block_content .= '<h3>' . $ies->name . '</h3>';
      $block_content .= '<hr>';
      $block_content .= '<div>' . $ies->nombre_contacto . '</div>';
      //$block_content .= '<div>C.I.: ' . $ies->cedula_contacto . '</div>';
      //$block_content .= '<div>Email: ' . $ies->email_contacto . '</div>';
      //$block_content .= 'Código:' . $ies->codigo;
    }

    $block['subject'] = '';
    if ($block_content == '') {  
      // no content from a week ago
      $block['content'] = 'Este usuario no tiene asociado una IES. Los archivos enviados no aparecerán en el reporte de formularios.';
    } else {
      // set up the block
      $block['content'] = $block_content;
    }
  }
  return $block;
}

/**
 *
 */
function ceaaces_evaluacion() {
  global $user;
  $num = db_result(db_query('SELECT count(*) FROM ev_log WHERE uid=' . $user->uid . ' AND tipo=1'));
  if ($num == 0) {
    drupal_set_message('Bienvenido al sistema de Gestión de Información de las Instituciones de Educación Superior. Usted ha ingresado con la clave proporcionada por CEAACES, la cual debe ser cambiada para poder hacer uso de este sistema. Por favor sívase utilizar el siguiente formulario para realizar el cambio de clave indicado.');
    drupal_goto('cambiar_clave');
  }
  $links = '<div>&nbsp;</div><div>&nbsp;</div>
    <table style="border:solid 0px #999;color:#999;">';
  $sql = "SELECT *, to_char(created, 'DD/MM/YYYY HH:MI:SS') as creado FROM ev_archivo WHERE ies_name = '" . str_replace("'", "''", $user->name) . "' ORDER BY created DESC";
  $result = db_query($sql);  
  $first = true;
  while ($file = db_fetch_object($result)) {
    $links .= '<tr' . ($first ? ' style="background-color:#ffb;"' : '') . '>
      <td style="width:220px;border:solid 2px #ddd;text-align:center;">
      <a href="/evaluacion_descargar?file=' . $file->id . '">' . $file->orig_name . '</a> <br><span>Subido ' . $file->creado . '</span>
      </td>
      <td style="border:solid 2px #ddd;text-align:center;">
      Huella digital del archivo (MD5): <br><span style="color:#000;font-size:14pt;font-family:Courier,Serif">' . $file->md5 . '</span> <br>
      <a href="http://es.wikipedia.org/wiki/MD5">(¿Qué es esto?)</a>
      </td>
      <td style="border:solid 2px #ddd;text-align:center;">
      <a href="/evaluacion_descargar?file=' . $file->id . '&comprobante">Descargar comprobante</a> <br>
      </td>
      </tr>';
    $first = false;
  }
  $xxlinks = '<div>&nbsp;</div><div>&nbsp;</div>';
  $links .= '</table><div>&nbsp;</div><div>&nbsp;</div>';
//$links .= $sql; 
  $form = drupal_get_form('ceaaces_upload_eva_spreadsheet');
  //$form = drupal_get_form('ceaaces_login2');
  return $links.$form;
}


function ceaaces_cambiar_clave() {
  $form= array();

  $form['clave1'] = array(
    '#type' => 'password',
    '#title' => t('Ingrese su contraseña'),
    '#size' => 60,
  );

  $form['clave2'] = array(
    '#type' => 'password',
    '#title' => t('Repita su contraseña'),
    '#size' => 60,
  );
  $form['submit'] = array('#type' => 'submit', '#value' => 'Enviar');
  return $form;

}

function ceaaces_cambiar_clave_validate($form, &$form_state) {
  global $user;
  if (strlen($form_state['values']['clave1']) < 8) {
    form_set_error('clave1', 'Ingrese una clave de mínimo ocho caracteres.');
  }
  if ($form_state['values']['clave1'] != $form_state['values']['clave2']) {
    form_set_error('clave2', 'Ingrese el mismo texto en ambos campos.');
  }
}

function ceaaces_cambiar_clave_submit($form, &$form_state) {
  global $user;
  $account = user_load($user->uid);
  $account->pass = $form_state['values']['clave1'];
  user_save($user, array('pass' => $form_state['values']['clave1']));

  db_query('INSERT INTO ev_log(uid, tipo) VALUES (' . $user->uid . ', 1)');
  drupal_set_message('El cambio de la clave original se ha realizado con éxito. Usted puede volver a cambiar su clave en cualquier momento, accediendo a "Mi cuenta" en la parte izquierda, en la opción "Editar".');
  drupal_goto('evaluacion');
}

/**
 * Formulario para la carga de la hoja de cálculo con la evaluación de IES
 */

function ceaaces_upload_eva_spreadsheet() {
  $form = array();
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  $form['hoja_calculo'] = array(
    '#type' => 'file', 
    //'#type' => 'filefield_widget', 
    '#title' => 'Ingrese el formulario', 
    '#description' => 'Escoja el archivo de Excel del formulario que ha llenado.',
  );

  $form['submit'] = array('#type' => 'submit', '#value' => 'Enviar');

  return $form;
}

/*
function ceaaces_upload_eva_spreadsheet_validate($form, &$form_state) {
  if (!$file = file_check_upload('hoja_calculo') ) {
    form_set_error('hoja_calculo', t('No se ha podido subir el archivo. Por favor vuelva a intentarlo.') );
  }
}
 */

function ceaaces_upload_eva_spreadsheet_submit($form, &$form_state) {
  global $user;
  $file_directory_path = variable_get('file_directory_path', 'files');
  $dest = $file_directory_path;


  if (file_check_directory($dest)) {
    //$dest .= '/Insituto-' . $user->codigo . '.xlsx'; 
    $filename = 'Insituto.xlsx';
    //$dest .= '/Insituto.xlsx';
    $validators = array( 
      'file_validate_extensions' => array(
        'xlsx xls ods'
      )
    );

    $file = file_save_upload('hoja_calculo', $validators, $dest);

    if($file != 0) {
      $dest_path = $file_directory_path . '/forms_institutos';
      $filename = $file->filename;
      
      $extension = explode('.', $filename);
      $extension = $extension[count($extension) - 1];

      $md5 = md5_file($dest . '/' . $file->filename);
      $file->filename = $user->uid . '-' . $md5 . '-' . time() . '.' . $extension;
      $result = file_move($file, $dest_path, FILE_EXISTS_RENAME);
      if ($result == 1) {
        //Success, $file object will contain a different (renamed)
        //filename and filepath if the destination existed
        db_query("INSERT INTO ev_archivo (ies_name, ev_tipo_archivo_id, name, md5, path, extension, orig_name) VALUES ('" . str_replace("'", "''", $user->name) . "', 1, '{$file->filename}', '$md5', '{$dest_path}', '{$extension}', '{$filename}')");
        drupal_set_message('El archivo: <strong>"' . $filename . '"</strong> ha sido cargado exitosamente.');
      }
      else {
        //Failure
        drupal_set_message('ERROR moviendo el archivo <strong>"' . $filename . '"</strong> al directorio de formularios.');
      }
    } else {
      form_set_error('', 'No se pudo registrar porque no ha ingresado ningún archivo.');
    }
  } else {
    drupal_set_message( t('ALERTA: El directorio de descargas del servidor no es accesible. Consulte con el administrador del sistema. admin!', 'status') );
  }
}

function ceaaces_inscripcion_readonly() {
  $form = ceaaces_inscripcion();
  $output = '';

  $num_cred = $form['num_cred']['#default_value'];
  $num_cred = (empty($num_cred)) ? 0 : $num_cred;
  $num_cred_tot = $form['num_cred_tot']['#default_value'];
  $num_cred_tot = (empty($num_cred_tot)) ? 0 : $num_cred_tot;

  $porcentaje_min_cred_examen = variable_get('ceaaces_porcentaje_min_cred_examen', '80');
  $porcentaje_cred = ($num_cred_tot == 0) ? -1 : round(($num_cred / $num_cred_tot) * 100);

  if ($porcentaje_cred >= $porcentaje_min_cred_examen) {
    $mensaje_examen = variable_get('ceaaces_mensaje_entra_examen', '');
    $mensaje_examen = t($mensaje_examen, array(
      '!num_cred' => $num_cred,
      '!num_cred_tot' => $num_cred_tot,
      '!porcentaje_cred' => $porcentaje_cred,
      '!porcentaje_min_cred_examen' => $porcentaje_min_cred_examen,
    ));
  } else if ($porcentaje_cred == -1) {
    $mensaje_examen = variable_get('ceaaces_mensaje_sin_num_cred_tot', '');
    $mensaje_examen = t($mensaje_examen, array(
      '!num_cred' => $num_cred,
      '!porcentaje_min_cred_examen' => $porcentaje_min_cred_examen,
    ));
  } else if ($porcentaje_cred == 0) {
    $mensaje_examen = variable_get('ceaaces_mensaje_sin_num_cred', '');
    $mensaje_examen = t($mensaje_examen, array(
      '!num_cred_tot' => $num_cred_tot,
      '!porcentaje_min_cred_examen' => $porcentaje_min_cred_examen,
    ));
  } else {
    $mensaje_examen = variable_get('ceaaces_mensaje_no_entra_examen', '');
    $mensaje_examen = t($mensaje_examen, array(
      '!num_cred' => $num_cred,
      '!num_cred_tot' => $num_cred_tot,
      '!porcentaje_cred' => $porcentaje_cred,
      '!porcentaje_min_cred_examen' => $porcentaje_min_cred_examen,
    ));
  }
  $output .= '<div style="background-color:#ffa;margin:20px;width:400px;border:solid 2px #ff6;">';
  $output .= $mensaje_examen;
  $output .= '</div>';

  $output .= '<table border=0>';
  foreach ($form as $k => $field) {
    if ($field['#type'] != 'submit') {
      $output .= '<tr>';
      $output .= '<th style="width:200px;">';
      $output .= $field['#title'] . ':';
      $output .= '</th>';
      $output .= '<td style="width:400px;">';
      $default = (isset($field['#default_description'])) ? $field['#default_description'] : $field['#default_value'];
      if (is_array($default)) {
        $glue = '';
        foreach ($default as $v) {
          $output .= $glue . $v;
          $glue = ', ';
        }
      } else {
        $output .= $default;
      }
      $output .= '</td>';
      $output .= '</tr>';
    }
  }
  $output .= '</table>';
  $output .= '<div>';
  $output .= '<a href="/inscripcion_editar">Editar la información</a>';
  $output .= '</div>';
  return $output;
}

function ceaaces_inscripcion() {
  global $user;
  $form = array();
  //$cedula = '1722736814';
  $cedula = $user->name;
  watchdog('ceaaces', 'user.name=' . $cedula . ' | user: ' . serialize($user));
  $estudiante = db_fetch_object(db_query("SELECT * FROM ev_form_mtn WHERE cedula='$cedula'  ORDER BY id DESC LIMIT 1"));
  $_SESSION['ev_form_mtn_id'] = $estudiante->id;
  $_SESSION['ev_form_mtn_n'] = $estudiante->n;

  $form['apellido_paterno'] = array(
    '#type' => 'textfield',
    '#title' => 'Apellido paterno',
    '#default_value' => $estudiante->apellido_paterno,
    '#size' => 60,
  );
  
  $form['apellido_materno'] = array(
    '#type' => 'textfield',
    '#title' => 'Apellido materno',
    '#default_value' => $estudiante->apellido_materno,
    '#size' => 60,
  );
  
  $form['nombres'] = array(
    '#type' => 'textfield',
    '#title' => 'Nombres',
    '#default_value' => $estudiante->nombres,
    '#size' => 60,
  );
  
  $form['cedula'] = array(
    '#type' => 'textfield',
    '#title' => 'Cédula',
    '#default_value' => $estudiante->cedula,
    '#size' => 60,
  );

  $form['provincia'] = array(
    '#type' => 'hierarchical_select',
    '#title' => 'Provincia, cantón y parroquia donde se imparte la carrera o programa académico',
    '#config' => array(
      'module' => 'ceaaces',
      'params' => array(
        'type' => '',
      ),
      'save_lineage'    => 0,
      'enforce_deepest' => 1,
      'entity_count'    => 0,
      'require_entity'  => 0,
      'resizable' => 0,
      'level_labels' => array(
        'status' => 1,
        'labels' => array(
          0 => t('Escoja una provincia'),
          1 => t('Escoja un cantón'),
          2 => t('Escoja una parroquia'),
        ),
      ),
      'dropbox' => array(
        'status' => 0,
        'title' => t('Selected standards'),
        'limit' => 0,
        'reset_hs' => 0,
      ),
      'editability' => array(
        'status' => 0,
      ),
      'params' => array(),
      'render_flat_select' => 0,
    ),
    //'#default_value' => $estudiante->ev_provincia_id . '|' . $estudiante->ev_provincia_id . '-' . $estudiante->canton . '|' . $estudiante->ev_provincia_id . '-' . $estudiante->canton . '-' . $estudiante->parroquia,
    '#default_value' => array($estudiante->ev_provincia_id,  $estudiante->ev_canton_id, $estudiante->ev_parroquia_id),
    '#default_description' => array($estudiante->provincia,  $estudiante->canton, $estudiante->parroquia),
  );
  /*
  $form['provincia'] = array(
    '#type' => 'select',
    '#title' => 'Provincia',
    '#options' => ceaaces_get('provincia', 'id<>0'),
  );
  $form['canton'] = array(
    '#type' => 'select',
    '#title' => 'Cantón',
    '#options' => array('Seleccione una provincia'),
  );
  $form['parroquia'] = array(
    '#type' => 'select',
    '#title' => 'Parroquia',
    '#options' => array('Seleccione una provincia y un cantón'),
  );
   */
  $form['telefono_fijo'] = array(
    '#type' => 'textfield',
    '#title' => 'Teléfono fijo',
    '#default_value' => $estudiante->telefono_fijo,
    '#size' => 60,
  );

  $form['telefono_movil'] = array(
    '#type' => 'textfield',
    '#title' => 'Teléfono móvil',
    '#default_value' => $estudiante->telefono_movil,
    '#size' => 60,
  );

  $form['direccion'] = array(
    '#type' => 'textfield',
    '#title' => 'Dirección',
    '#default_value' => $estudiante->direccion,
    '#size' => 60,
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => 'Correo electrónico',
    '#default_value' => $estudiante->email,
    '#size' => 60,
  );


  $form['num_cred_tot'] = array(
    '#type' => 'textfield',
    '#title' => 'Número de créditos totales para pasar la carrera o programa académico',
    '#default_value' => $estudiante->num_cred_tot,
    '#size' => 30,
  );
  $form['num_cred'] = array(
    '#type' => 'textfield',
    '#title' => 'Número de créditos aprobados hasta la fecha',
    '#default_value' => $estudiante->num_cred,
    '#size' => 30,
  );
  $form['submit'] = array('#type' => 'submit', '#value' => 'Guardar');

  //return system_settings_form($form);
  return $form;
}

function ceaaces_inscripcion_validate($form, &$form_state) {
  if (!ctype_digit($form_state['values']['num_cred_tot'])) {
    form_set_error('', 'Ingrese un número entero válido en el campo de Número de créditos totales.');
  }
  if (!ctype_digit($form_state['values']['num_cred'])) {
    form_set_error('', 'Ingrese un número entero válido en el campo de Número de créditos.');
  }
}

function ceaaces_inscripcion_submit($form, &$form_state) {
  $a = '';
  $b = '';
  $glue = '';
  $closed = false;
  foreach ($form as $k => $attr) {
    if ($k == 'submit') {
      $closed = true;
    }
    if (!$closed && $k[0] != '#') {
      $vb = $form_state['values'][$k];
      //if ($attr['#type'] == 'textfield' || $attr['#type'] == 'textfield') {
      if ($attr['#type'] == 'hierarchical_select') {
        $geo = explode('-', $vb);

        $tablas = array('provincia', 'canton', 'parroquia');
        $count = 0;
        $vb = '';
        $k = '';
        $glue2 = '';
        foreach ($geo as $g) {
          $vb .= $glue2 . "$g,(select name from ev_{$tablas[$count]} where id=$g)";
          $k .= $glue2 . "ev_{$tablas[$count]}_id,{$tablas[$count]}";
          $count++;
          $glue2 = ',';
        }
      } else {
        $vb = "'$vb'";
      }
      $a .= $glue . $k; 
      $b .= $glue . $vb;
      $glue = ',';
    }

  }
  $q = 'INSERT INTO ev_form_mtn(' . $a . ', registro_origen_id, registro_origen_n) values (' . $b . ', ' . $_SESSION['ev_form_mtn_id'] . ', ' . $_SESSION['ev_form_mtn_n'] . ')';
  db_query($q);
  drupal_set_message('Su formulario ha sido guardado.' );
}

function ceaaces_get($tabla, $where=NULL, $order=NULL) {
  $q = 'SELECT id, name FROM ev_' . $tabla;
  if (!empty($where)) {
    $q .= ' WHERE ' . $where;
  }
  if (empty($order)) {
    $order = 'name';
  }
  $q .= ' ORDER BY ' . $order;

  $valores = db_query($q);
  $result = array();
  while ($valor = db_fetch_object($valores)) {
    $result[$valor->id] = $valor->name;
  }
  return $result;
}

/**
 * Implementation of hook_hierarchical_select_root_level().
 */
function ceaaces_hierarchical_select_root_level($params) {
  $hierarchy = ceaaces_get_geo_hierarchy();
  $items = $hierarchy['root']['children'];
  return _ceaaces_items_associate_labels_with_items($items); 
}

/**
 * Implementation of hook_hierarchical_select_children().
 */
function ceaaces_hierarchical_select_children($parent) {
  $hierarchy = ceaaces_get_geo_hierarchy();
  $items = $hierarchy[$parent]['children'];
  return _ceaaces_items_associate_labels_with_items($items);
}

function ceaaces_get_geo_hierarchy() {
  static $ceaaces_geo_hierarchy;

  if (!isset($ceaaces_geo_hierarchy)) {
    $sql = '
      SELECT
      pr.id as pr_id,
      c.id as c_id,
      pa.id as pa_id,
      pr.name as pr_name,
      c.name as c_name,
      pa.name as pa_name,
      pr.codigo as pr_codigo,
      c.codigo as c_codigo,
      pa.codigo as pa_codigo
      FROM
      ev_provincia as pr,
      ev_canton as c,
      ev_parroquia as pa
      WHERE
      pr.id = c.ev_provincia_id
      AND c.id = pa.ev_canton_id
      ORDER BY 
      pr.name, c.name, pa.name
      ';
    $result = db_query($sql);
    $previous = array('pr' => NULL, 'c' => NULL, 'pa' => NULL);
    while ($g = db_fetch_object($result)) {
      $pr_id = $g->pr_id;
      $c_id = $g->pr_id . "-" . $g->c_id;
      $pa_id = $g->pr_id . "-" . $g->c_id . "-" . $g->pa_id;

      if ($previous['pr'] <> $pr_id) {
        //quiebre de provincia
        $ceaaces_geo_hierarchy['root']['children'][] = $pr_id;
        $ceaaces_geo_hierarchy[$pr_id]['label'] = $g->pr_name;
      }

      if ($previous['c'] <> $c_id) {
        //quiebre de canton
        $ceaaces_geo_hierarchy[$pr_id]['children'][] = $c_id;
        $ceaaces_geo_hierarchy[$c_id]['label'] = $g->c_name;
      }
      $ceaaces_geo_hierarchy[$c_id]['children'][] = $pa_id;
      $ceaaces_geo_hierarchy[$pa_id]['label'] = $g->pa_name;

      $previous['pr'] = $pr_id;
      $previous['c'] = $c_id;
      $previous['pa'] = $pa_id;
    }
  }
  return $ceaaces_geo_hierarchy;
}


/**
 * Implementation of hook_hierarchical_select_lineage().
 */
function ceaaces_hierarchical_select_lineage($item, $params) {
  // If given the item "Company A-Accounts Payable-Employee C", this will
  // generate the following lineage:
  // Array
  // (
  //   [0] => Company A
  //   [1] => Company A-Accounts Payable
  //   [2] => Company A-Accounts Payable-Employee C
  // )
  $parts = explode('-', $item);

  $lineage = array();
  for ($i = 0; $i < count($parts); $i++) {
    $lineage[] = implode('-', array_slice($parts, 0, $i + 1));
  }
  return $lineage;
}

/**
 * Implementation of hook_hierarchical_select_valid_item().
 */
function ceaaces_hierarchical_select_valid_item($item, $params) {
  $hierarchy = ceaaces_get_geo_hierarchy();
  return isset($hierarchy[$item]['label']);
}

/**
 * Implementation of hook_hierarchical_select_item_get_label().
 */
function ceaaces_hierarchical_select_item_get_label($item, $params) {
  $hierarchy = ceaaces_get_geo_hierarchy();
  return $hierarchy[$item]['label'];
}


function _ceaaces_items_associate_labels_with_items($items) {
  $hierarchy = ceaaces_get_geo_hierarchy();
  $options = array();

  if (count($items)) {
    foreach ($items as $item) {
      // Use the translated item when available!
      $options[$item] = t($hierarchy[$item]['label']);
    }
  }
  return $options;
}


